<?php

/**
 * Implementation of hook_menu().
 */
function mn_share_menu() {
  $items = array();
  $items['mn-share'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'mn_share_service_links',
    'page arguments' => array(),
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
  );
  return $items;
}

/**
 * Implementation of hook_views_api().
 */
function mn_share_views_api() {
  return array(
    'api' => '2.0',
    'path' => drupal_get_path('module', 'mn_share') .'/views',
  );
}

/**
 * AJAX callback for generating service links.
 */
function mn_share_service_links() {
  if (isset($_GET['url'], $_GET['title'])) {
    $title = $_GET['title'];
    $url = $_GET['url'];
    $short_url = _mn_share_short_url($_GET['url']);
    $full = "{$title} ({$short_url})";
    $html = $title .' ('. l($short_url, $short_url, array('absolute' => TRUE)) .')';

    $links = array();
    $links['twitter'] = array(
      'title' => t('Twitter'),
      'href' => 'http://twitter.com',
      'query' => 'status='. urlencode($full),
      'attributes' => array('target' => '_blank'),
    );
    $links['facebook'] = array(
      'title' => t('Facebook'),
      'href' => 'http://facebook.com/share.php',
      'query' => 'u='. urlencode($url),
      'attributes' => array('target' => '_blank'),
    );
    $links['email'] = array(
      'title' => t('E-mail'),
      'href' => 'mailto:',
      // @TODO: test with more mail clients. Firefox -> Gmail integration
      // does not like urlencode()'d strings.
      'query' => array('Subject' => $title, 'Body' => $full),
      'attributes' => array('target' => '_blank'),
    );
    $links = theme('links', $links);
    print theme('mn_share_popup', $links, $html);
  }
  exit;
}

/**
 * Push URL through a URL shortening service.
 */
function _mn_share_short_url($url) {
  // @TODO make this configurable
  // $api = "http://is.gd/api.php?longurl={$url}";
  $api = "http://tinyurl.com/api-create.php?url={$url}";

  if (function_exists('curl_init')) {
    $session = curl_init();
    curl_setopt($session, CURLOPT_URL, $api);
    curl_setopt($session, CURLOPT_RETURNTRANSFER, 1);
    $url = curl_exec($session);
    curl_close($session);
  }
  return $url;
}

/**
 * Implementation of hook_theme().
 */
function mn_share_theme() {
  return array('mn_share_popup' => array());
}

/**
 * Theme a share popup box.
 */
function theme_mn_share_popup($service_links, $text) {
  $output = "<div class='mn-share-popup clear-block'>";
  $output .= "<span class='close'>". t('Close') ."</span>";
  $output .= "<h2>{$text}</h2>";
  $output .= $service_links;
  $output .= "</div>";
  return $output;
}

/**
 * Implementation of hook_views_pre_build().
 */
function mn_share_views_pre_build(&$view) {
  if ($view->base_table == 'feeds_data_syndication' && get_class($view->display_handler) == 'views_plugin_display_page') {
    $fields = $view->display_handler->get_option('fields');
    if (empty($fields['mn_share_link'])) {
      $fields['mn_share_link'] = array(
        'url' => '[url]',
        'text' => '[title]',
        'exclude' => '',
        'link_text' => 'Share',
        'id' => 'mn_share_link',
        'table' => 'views',
        'field' => 'mn_share_link',
        'override' => array(
          'button' => 'Override',
        ),
        'relationship' => 'none',
      );
      $view->display_handler->set_option('fields', $fields);
    }
  }
}
